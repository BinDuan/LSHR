% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LSHR.R
\name{get_similar_pairs}
\alias{get_similar_pairs}
\title{Calculating candidate pairs using locality sensitive hashing.}
\usage{
get_similar_pairs(X, bands_number, rows_per_band, distance = c("cosine",
  "jaccard"), seed = 1L, verbose = FALSE, mc.cores = 1, ...)
}
\arguments{
\item{X}{input matrix - sparse or dense}

\item{bands_number}{number of bands for LSH algorithm - tradeoff between precision and
number of false positive candidates. See \link{get_s_curve} for details.}

\item{rows_per_band}{number of rows in each band for LSH algorithm - tradeoff between precision and
number of false positive candidates. See \link{get_s_curve} for details.
For "cosine" distance due to performance reasons (bit arifmetics) only values less than 32 are supported.}

\item{distance}{on of "cosine" or "jaccard" - how to measure distance between rows of input matrix}

\item{seed}{random seed for reproducibility}

\item{verbose}{\code{logical} print lsh process information.
(such as expected false positive rate, false negative rate,timings, etc.)}
}
\value{
pairs of candidates with similarity => \code{similarity} -
\code{\link{data.table}} with 3 colums: id1, id2, N -
index of first candidate, index of second candidate,
and number of buckets where they share same value. The latter provided only for information.
(Intutition is following: the bigger N - the stronger similarity)
}
\examples{
\dontrun{
library(text2vec)
library(LSHR)
library(Matrix)
data("movie_review")
it <- itoken(movie_review$review, preprocess_function = tolower, tokenizer = word_tokenizer)
dtm <- create_dtm(it, hash_vectorizer())
dtm = as(dtm, "RsparseMatrix")
pairs = get_similar_pairs(dtm, bands_number = 4, rows_per_band = 32, distance = 'cosine', verbose = TRUE)
pairs[order(-N)]
}
}

